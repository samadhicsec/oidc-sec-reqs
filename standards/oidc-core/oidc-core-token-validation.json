[
  {
    "id": 0,
    "protocol_stage": "id-token-validation",
    "category": "iss",
    "priority": "Must",
    "requirement": "Validate the iss claim against the issuer from the OIDC Discovery",
    "response_type": [
      "code",
      "code id_token",
      "code token",
      "code id_token token"
    ],
    "reference": [
      "OIDC-3.1.3.7",
      "OIDC-3.3.2.12",
      "OIDC-3.3.3.5",
      "OIDC-3.3.3.7",
      "OIDC-16.15"
    ]
  },
  {
    "id": 1,
    "protocol_stage": "id-token-validation",
    "category": "iss",
    "priority": "Must",
    "requirement": "Compare the full URI (host plus path) when matching iss",
    "response_type": [
      "code",
      "code id_token",
      "code token",
      "code id_token token"
    ],
    "reference": [
      "OIDC-16.15"
    ]
  },
  {
    "id": 2,
    "protocol_stage": "id-token-validation",
    "category": "aud",
    "priority": "Must",
    "requirement": "Validate the aud claim against the client_id registered to the Issuer identified by the iss claim",
    "response_type": [
      "code",
      "code id_token",
      "code token",
      "code id_token token"
    ],
    "reference": [
      "OIDC-3.1.3.7",
      "OIDC-3.3.2.12",
      "OIDC-3.3.3.5",
      "OIDC-3.3.3.7"
    ]
  },
  {
    "id": 3,
    "protocol_stage": "id-token-validation",
    "category": "aud",
    "priority": "Must",
    "requirement": "Validate that if a MAC based alg is used, then the aud claim is not multi-valued, and the azp claim is not present",
    "response_type": [
      "code",
      "code id_token",
      "code token",
      "code id_token token"
    ],
    "reference": [
      "OIDC-3.1.3.7",
      "OIDC-3.3.2.12",
      "OIDC-3.3.3.5",
      "OIDC-3.3.3.7"
    ]
  },
  {
    "id": 4,
    "protocol_stage": "id-token-validation",
    "category": "exp",
    "priority": "Must",
    "requirement": "Validate the current data/time is before the time in the exp claim. Accounting for clock skew is permitted.",
    "response_type": [
      "code",
      "code id_token",
      "code token",
      "code id_token token"
    ],
    "reference": [
      "OIDC-2",
      "OIDC-3.1.3.7",
      "OIDC-3.3.2.12",
      "OIDC-3.3.3.5",
      "OIDC-3.3.3.7"
    ]
  },
  {
    "id": 5,
    "protocol_stage": "id-token-validation",
    "category": "auth_time",
    "priority": "Must",
    "requirement": "Validate the auth_time claim is present if a max_age request is made or when auth_time is requested as an Essential Claim",
    "response_type": [
      "code",
      "code id_token",
      "code token",
      "code id_token token"
    ],
    "reference": [
      "OIDC-2",
      "OIDC-15.1",
      "OIDC-3.1.3.7",
      "OIDC-3.3.2.12",
      "OIDC-3.3.3.5",
      "OIDC-3.3.3.7"
    ]
  },
  {
    "id": 6,
    "protocol_stage": "id-token-validation",
    "category": "iat",
    "priority": "Must",
    "requirement": "Validate the iat time claim. The iat time claim must not differ from the current by more than a per-OP configurable amount",
    "response_type": [
      "code",
      "code id_token",
      "code token",
      "code id_token token"
    ],
    "reference": [
      "OIDC-3.1.3.7",
      "OIDC-3.3.2.12",
      "OIDC-3.3.3.5",
      "OIDC-3.3.3.7"
    ]
  },
  {
    "id": 7,
    "protocol_stage": "id-token-validation",
    "category": "nonce",
    "priority": "Must",
    "requirement": "Ensure the nonce is present in the ID Token",
    "response_type": [
      "code id_token",
      "code token",
      "code id_token token"
    ],
    "reference": [
      "OIDC-3.3.2.11"
    ]
  },
  {
    "id": 8,
    "protocol_stage": "id-token-validation",
    "category": "nonce",
    "priority": "Must",
    "requirement": "Validate the nonce matches the one sent in the authorization request. Nonces are case sensitive",
    "response_type": [
      "code",
      "code id_token",
      "code token",
      "code id_token token"
    ],
    "reference": [
      "OIDC-2",
      "OIDC-3.1.3.7",
      "OIDC-3.3.2.12",
      "OIDC-3.3.3.5",
      "OIDC-3.3.3.7",
      "OIDC-3.2.2.11",
      "3.3.2.12"
    ]
  },
  {
    "id": 9,
    "protocol_stage": "id-token-validation",
    "category": "nonce",
    "priority": "Should",
    "requirement": "Validate the nonce has not been used before",
    "response_type": [
      "code",
      "code id_token",
      "code token",
      "code id_token token"
    ],
    "reference": [
      "OIDC-3.1.3.7",
      "OIDC-3.3.2.12",
      "OIDC-3.3.3.5",
      "OIDC-3.3.3.7",
      "OIDC-3.2.2.11",
      "3.3.2.12"
    ]
  },
  {
    "id": 10,
    "protocol_stage": "id-token-validation",
    "category": "azp",
    "priority": "Must",
    "requirement": "Validate, if it is present, the azp claim contains the Client Id the party to who the ID Token was issued",
    "response_type": [
      "code",
      "code id_token",
      "code token",
      "code id_token token"
    ],
    "reference": [
      "OIDC-2",
      "OIDC-3.1.3.7",
      "OIDC-3.3.2.12",
      "OIDC-3.3.3.5",
      "OIDC-3.3.3.7"
    ]
  },
  {
    "id": 11,
    "protocol_stage": "id-token-validation",
    "category": "azp",
    "priority": "Should",
    "requirement": "Validate the azp claim is present if the aud claim is multi-valued",
    "response_type": [
      "code",
      "code id_token",
      "code token",
      "code id_token token"
    ],
    "reference": [
      "OIDC-3.1.3.7",
      "OIDC-3.3.2.12",
      "OIDC-3.3.3.5",
      "OIDC-3.3.3.7"
    ]
  },
  {
    "id": 12,
    "protocol_stage": "id-token-validation",
    "category": "Signature",
    "priority": "Must",
    "requirement": "Validate that the ID Token is signed using JWS",
    "response_type": [
      "code",
      "code id_token",
      "code token",
      "code id_token token"
    ],
    "reference": [
      "OIDC-2"
    ]
  },
  {
    "id": 13,
    "protocol_stage": "id-token-validation",
    "category": "Signature",
    "priority": "Must",
    "requirement": "Validate the ID Token was not signed using an alg value of 'none'",
    "response_type": [
      "code",
      "code id_token",
      "code token",
      "code id_token token"
    ],
    "reference": [
      "OIDC-2"
    ]
  },
  {
    "id": 14,
    "protocol_stage": "id-token-validation",
    "category": "Signature",
    "priority": "Must",
    "requirement": "Validate the ID Token signature using the JWKS key from JWKS URL specified in the OIDC Discovery",
    "response_type": [
      "code",
      "code id_token",
      "code token",
      "code id_token token"
    ],
    "reference": [
      "OIDC-3.1.3.7",
      "OIDC-3.3.2.12",
      "OIDC-3.3.3.5",
      "OIDC-3.3.3.7",
      "OIDC-3.2.2.11",
      "OIDC-3.3.2.12"
    ]
  },
  {
    "id": 15,
    "protocol_stage": "id-token-validation",
    "category": "Signature",
    "priority": "Must",
    "requirement": "Validate the the JWT header alg value is one declared supported in the OIDC Discovery",
    "response_type": [
      "code",
      "code id_token",
      "code token",
      "code id_token token"
    ],
    "reference": [
      "OIDC-3.1.3.7",
      "OIDC-3.3.2.12",
      "OIDC-3.3.3.5",
      "OIDC-3.3.3.7"
    ]
  },
  {
    "id": 16,
    "protocol_stage": "id-token-validation",
    "category": "Signature",
    "priority": "Must",
    "requirement": "Validate that the JWS or JWE x5u, x5c, jku, or jwk Header Parameter fields are not used in the ID Token",
    "response_type": [
      "code",
      "code id_token",
      "code token",
      "code id_token token"
    ],
    "reference": [
      "OIDC-2"
    ]
  },
  {
    "id": 17,
    "protocol_stage": "id-token-validation",
    "category": "Encryption",
    "priority": "Should",
    "requirement": "Reject unencrypted ID Tokens, if the use of encrypted ID Tokens was configured at Registration",
    "response_type": [
      "code",
      "code id_token",
      "code token",
      "code id_token token"
    ],
    "reference": [
      "OIDC-3.1.3.7",
      "OIDC-3.3.2.12",
      "OIDC-3.3.3.5",
      "OIDC-3.3.3.7"
    ]
  },
  {
    "id": 18,
    "protocol_stage": "id-token-validation",
    "category": "Encryption",
    "priority": "Must",
    "requirement": "Validate, if the ID Token is encrypted, that the ID Token is signed then encrypted I.e. a Nested JWT",
    "response_type": [
      "code",
      "code id_token",
      "code token",
      "code id_token token"
    ],
    "reference": [
      "OIDC-2"
    ]
  },
  {
    "id": 19,
    "protocol_stage": "id-token-validation",
    "category": "auth_time",
    "priority": "Must",
    "requirement": "Validate auth_time is present in the ID Token when max_age was part of the authentication request",
    "response_type": [
      "code",
      "code id_token",
      "code token",
      "code id_token token"
    ],
    "reference": [
      "OIDC-3.1.2.1",
      "OIDC-3.3.2.1"
    ]
  },
  {
    "id": 20,
    "protocol_stage": "id-token-validation",
    "category": "acr",
    "priority": "Should",
    "requirement": "Validate the acr claim (if acr claim was requested)",
    "response_type": [
      "code",
      "code id_token",
      "code token",
      "code id_token token"
    ],
    "reference": [
      "OIDC-3.1.3.7",
      "OIDC-3.3.2.12",
      "OIDC-3.3.3.5",
      "OIDC-3.3.3.7"
    ]
  },
  {
    "id": 21,
    "protocol_stage": "id-token-validation",
    "category": "at_hash",
    "priority": "Must",
    "requirement": "Ensure the at_hash is present in the ID Token",
    "response_type": [
      "code id_token token"
    ],
    "reference": [
      "OIDC-3.3.2.11"
    ]
  },
  {
    "id": 22,
    "protocol_stage": "id-token-validation",
    "category": "at_hash",
    "priority": "Should",
    "requirement": "Validate the at_hash (if present)",
    "response_type": [
      "code",
      "code id_token",
      "code token",
      "code id_token token"
    ],
    "reference": [
      "OIDC-3.1.3.8",
      "OIDC-3.3.3.9"
    ]
  },
  {
    "id": 23,
    "protocol_stage": "id-token-validation",
    "category": "c_hash",
    "priority": "Must",
    "requirement": "Ensure the c_hash is present in the ID Token",
    "response_type": [
      "code id_token",
      "code id_token token"
    ],
    "reference": [
      "OIDC-3.3.2.11"
    ]
  }
]
